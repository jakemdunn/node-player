app.factory("AuthService",["socket","$rootScope","$location","AUTH_EVENTS",function(t,e,n,o){function i(){var i=this;i.authenticated=!1,i.user=null,i.login=function(e,n){t.emit("login",e,n)},i.logout=function(){t.emit("logout")},i.isAuthenticated=function(){return i.authenticated},i.isAuthorized=function(t){return angular.isArray(t)||(t=[t]),i.isAuthenticated()&&t.some(function(t){return i.user.roles.indexOf(t)>=0})},i.init=function(){t.on("loginStatus",function(t,a){i.authenticated=t,i.user=a,t?(e.$broadcast(o.loginSuccess,i.user),i.redirect?(n.path(i.redirect),i.redirect=null):"/login"==n.path()&&n.path("/")):(e.$broadcast(o.loginFailed),n.path("/login"))}),t.on("userDenied",function(t){t.user.name==i.user.name&&e.$broadcast(o.notAuthorized)}),e.$on("$routeChangeStart",function(t,a){if(a.data&&a.data.authorizedRoles){var u=a.data.authorizedRoles;i.isAuthorized(u)||(t.preventDefault(),i.isAuthenticated()?e.$broadcast(o.notAuthorized):(e.$broadcast(o.notAuthenticated),n.path("/login"),i.redirect=a.originalPath))}})}}return new i}]),app.constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}),app.constant("USER_ROLES",{all:"*",admin:"admin",user:"user"}),app.factory("socket",["socketFactory",function(t){return t({ioSocket:io.connect("/")})}]);
//# sourceMappingURL=factories.js.map